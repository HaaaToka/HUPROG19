Dexter aynı anda birden fazla iş yapmayı çok sevdigi için kardeşiyle konuştuğu sırada kardeşinin söyledigi kelimeyi sayılara çevirmektedir.<br>
Bu işlemi şu şekilde yapar.<br>
Kelimedeki her farklı *L* alt kelimeye iki değer atar.<br>
L alt kelimeninin ilk değeri A, ana kelimede tekrar ettiği her kısımdaki orta değerlerin toplamıdır.<br>
Orta değerler her alt kelime için  şu şekilde hesaplanır.


![image](https://s3.amazonaws.com/hr-assets/0/1552317607-95ed1bea8e-_.png)<br>
L alt kelimesinin ikinci değeri B, ana kelimede tekrar etme sayısıdır.<br><br>

Dexter alt kelimelerin B değerini yazdırmak istemektedir.Bunun için 2 kural vardır.<br>
İlk kural her farklı alt kelimenin B değeri öyle yazılmalıdır ki o kelimenin A değeri kendinden önceki alt kelimenin A değerinden büyük olmalıdır.<br>
İkinci kural arda arda gelen aynı B değerleri tek B değerine düşürebilir.<br><br>

Dexter'a bu özellikleri taşıyan en küçük sıkıştırılmış sayıya yazdırmasına yardımcı olun.


Input format:
İlk satır için bir adet doğal sayı n kelimenin boyudur.<br>
İkinci satır kelime'dir.

Output Format:
En küçük sıkıştırılmış sayı dizisini yazdırın.

Constraints:
0 <= n <= 400




�rnek:

input:
3
cdc

output:
21


Exp:
Alt kelime: c Orta değerlerinin toplamı ( A değeri ): 2 (Orta değerler:[(0,0), (2,2)]) Tekrar sayısı ( B değeri ): 2<br>
Alt kelime: dc, Orta değerlerinin toplamı( A değeri ): 2 (Orta değerler:[(1,2)]), Tekrar sayısı ( B değeri ): 1<br>
Alt kelime: cd, Orta değerlerinin toplamı ( A değeri ): 1 (Orta değerler:[(0,1)]), Tekrar sayısı ( B değeri ): 1<br>
Alt kelime: cdc, Orta değerlerinin toplamı ( A değeri ): 1 (Orta değerler:[(0,2)]), Tekrar sayısı ( B değeri ): 1<br>
Alt kelime: d, Orta değerlerinin toplamı ( A değeri ): 1 (Orta değerler:[(1,1))]), Tekrar sayısı ( B değeri ): 1<br><br>

Sıkıştırılmış işleminden önce  önce: 21111<br>
Sıkıştırılmış isleminden sonra 21<br>
